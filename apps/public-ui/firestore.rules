rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /betaNotifications/{betaNotificationId} {
      allow read, update, delete: if false;
      allow create: if true;
    }

    match /creds/{credId} {
      allow get: if false;
      allow list: if false;
      allow create: if byUser() && !exists(/databases/$(database)/documents/creds/$(request.auth.uid));
      allow update: if false;
      allow delete: if false;
  }

    match /polls/{pollId} {
      allow get: if false;
      allow list: if true;
      allow create: if byUser();
      allow update: if false;
      allow delete: if false;

      match /variationListings/{pollVariationListingId} {
        allow get: if true;
        allow list: if true;
        allow create: if byUser();
        allow update: if false;
        allow delete: if false;
      }

      match /variations/{pollVariationId} {
        allow get: if true;
        allow list: if true;
        allow create: if byUser();
        allow update: if false;
        allow delete: if false;
      }
    }
  }

  function byUser() {
    return request.auth.uid != null
        && request.auth.uid == request.resource.data.uid;
  }

  function validListing() {
        return ['x', 'y', 'z'].indexOf(request.resource.data.factors[0].axis) > -1
  }
}